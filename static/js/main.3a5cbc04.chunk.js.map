{"version":3,"sources":["config/Keys.js","context/articleData/articleDataContext.js","components/ArticleList/ArticleList.js","components/SingleArticle/SingleArticle.js","context/articleData/articleDataReducer.js","context/articleData/articleDataState.js","App.js","serviceWorker.js","index.js","components/ArticleList/ArticleList.module.css","components/SingleArticle/SingleArticle.module.css"],"names":["API","ArticleDataContext","createContext","ArticleList","useState","articlesList","setArticlesList","setData","useContext","useEffect","axios","get","then","response","data","articles","map","article","id","key","className","styles","card_wrapper","card","style","setBackgroundImage","urlToImage","source","name","title_wrapper","link","to","pathname","title","imageUrl","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","SingleArticle","props","getData","match","params","newspaper_article_wrapper","newspaper_article","author","image_wrapper","full_article_image","src","alt","description","content","href","url","target","rel","ArticleDataReducer","state","action","type","sessionStorage","setItem","JSON","stringify","payload","getItem","parse","ArticleDataState","children","useReducer","dispatch","a","Provider","value","App","basename","process","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3a5cbc04.chunk.js","sourcesContent":["export const API = {\r\n    API_KEY: \"613f72f600de4589af950cd248ec0809\"\r\n}","import {createContext} from \"react\";\r\n\r\nconst ArticleDataContext = createContext();\r\n\r\nexport default ArticleDataContext;","import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport { API } from \"../../config/Keys\";\r\nimport styles from \"./ArticleList.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArticleDataContext from \"../../context/articleData/articleDataContext\";\r\n\r\nexport const ArticleList = () => {\r\n    const [articlesList, setArticlesList] = useState([]);\r\n    const { setData } = useContext(ArticleDataContext);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://newsapi.org/v2/top-headlines?country=in&apiKey=${API.API_KEY}`)\r\n            .then(response => {\r\n                setArticlesList(response.data.articles);\r\n                setData(response.data.articles);\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {articlesList.map((article, id) => {\r\n                return (\r\n                    <div key={id} className={styles.card_wrapper}>\r\n                        <article className={styles.card} style={setBackgroundImage(article.urlToImage)}>\r\n                            <div className={styles.source}>{article.source.name}</div>\r\n                            <figcaption className={styles.title_wrapper}>\r\n                                <Link className={styles.link} to={{ pathname: `/article/${id}`, article }}>\r\n                                    <div className={styles.title}>{article.title}</div>\r\n                                </Link>\r\n                            </figcaption>\r\n                        </article>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst setBackgroundImage = imageUrl => {\r\n    if (imageUrl === null) return {};\r\n    return {\r\n        backgroundImage: `url(${imageUrl})`,\r\n        backgroundSize: `cover`,\r\n        backgroundRepeat: `no-repeat`,\r\n        backgroundPosition: `center center`,\r\n    }\r\n}\r\n","import React, {useContext, useEffect} from 'react';\r\nimport styles from \"./SingleArticle.module.css\";\r\nimport ArticleDataContext from \"../../context/articleData/articleDataContext\";\r\n\r\nexport const SingleArticle = (props) => {\r\n    const {data, getData} = useContext(ArticleDataContext);\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    const article  = data[props.match.params.id];\r\n    \r\n    return (\r\n        <div className={styles.newspaper_article_wrapper}>\r\n            {article &&\r\n                <div className={styles.newspaper_article}>\r\n                    <header>\r\n                        <h2>{article.title}</h2>\r\n                        <div className={styles.author}>From {article.author}</div>\r\n                    </header>\r\n                    <div className={styles.image_wrapper}>\r\n                        <div>\r\n                            <img className={styles.full_article_image} src={article.urlToImage} alt={article.description} />\r\n                            <figcaption>{article.description}</figcaption>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content\">{article.content}</div>\r\n                    <div className=\"url\">More Information: &nbsp;\r\n                    <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">{article.url}</a>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","const ArticleDataReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_DATA\":\r\n            sessionStorage.setItem(\"data\", JSON.stringify(action.payload));\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case \"GET_DATA\":\r\n            let data = sessionStorage.getItem(\"data\");\r\n            return  JSON.parse(data);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ArticleDataReducer;","import React, { useReducer } from \"react\";\r\nimport ArticleDataReducer from \"./articleDataReducer\";\r\nimport ArticleDataContext from \"./articleDataContext\";\r\n\r\nconst ArticleDataState = ({children}) => {\r\n    const initialState = {data: []};\r\n    const [state, dispatch] = useReducer(ArticleDataReducer, initialState);\r\n\r\n    const setData = async data => {\r\n          dispatch({\r\n            type: \"SET_DATA\",\r\n            payload: data\r\n          });\r\n      };\r\n\r\n    const getData = () => {\r\n        dispatch({\r\n            type: \"GET_DATA\"\r\n          });\r\n    }\r\n\r\n      return (\r\n          <ArticleDataContext.Provider\r\n          value={{\r\n              setData,\r\n              getData,\r\n              data: state\r\n            }}\r\n          >\r\n            {children}\r\n          </ArticleDataContext.Provider>\r\n      )\r\n}\r\n\r\nexport default ArticleDataState;","import React from \"react\";\nimport { ArticleList } from \"./components/ArticleList/ArticleList\";\nimport { SingleArticle } from \"./components/SingleArticle/SingleArticle\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ArticleDataState from \"./context/articleData/articleDataState\"\n\nfunction App() {\n  return (\n    <ArticleDataState>\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={ArticleList}></Route>\n          <Route path=\"/article/:id\" component={SingleArticle}></Route>\n        </Switch>\n      </div>\n    </Router>\n    </ArticleDataState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_wrapper\":\"ArticleList_card_wrapper__jLiuT\",\"card\":\"ArticleList_card__2Pkvj\",\"source\":\"ArticleList_source__1sY97\",\"title_wrapper\":\"ArticleList_title_wrapper__2gaz6\",\"title\":\"ArticleList_title__1lQnx\",\"link\":\"ArticleList_link__1f6Ny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newspaper_article_wrapper\":\"SingleArticle_newspaper_article_wrapper__1FD0P\",\"newspaper_article\":\"SingleArticle_newspaper_article__2gscA\",\"image_wrapper\":\"SingleArticle_image_wrapper__2bM3j\",\"full_article_image\":\"SingleArticle_full_article_image__3rBjA\",\"author\":\"SingleArticle_author__NyZPj\"};"],"sourceRoot":""}